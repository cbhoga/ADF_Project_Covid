{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "covid-reporting-adf-anup"
        },
        "ls_adls_covidreporting_accountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accountKey' of 'ls_adls_covidreporting'"
        },
        "ls_blob_covidreportingsa_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'ls_blob_covidreportingsa'"
        },
        "ls_db_covid_cluster_accessToken": {
            "type": "secureString",
            "metadata": "Secure string for 'accessToken' of 'ls_db_covid_cluster'"
        },
        "ls_db_covid_cluster_anu_accessToken": {
            "type": "secureString",
            "metadata": "Secure string for 'accessToken' of 'ls_db_covid_cluster_anu'"
        },
        "ls_sql_covid_db_password": {
            "type": "secureString",
            "metadata": "Secure string for 'password' of 'ls_sql_covid_db'"
        },
        "ls_adls_covidreporting_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://covidreportingsaadls.dfs.core.windows.net/"
        },
        "ls_http_opendata_europe_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "@{linkedService().sourceBaseURL}"
        },
        "ls_sql_covid_db_properties_typeProperties_server": {
            "type": "string",
            "defaultValue": "covid-reporting-ss.database.windows.net"
        },
        "ls_sql_covid_db_properties_typeProperties_database": {
            "type": "string",
            "defaultValue": "covid-db-anu"
        },
        "ls_sql_covid_db_properties_typeProperties_userName": {
            "type": "string",
            "defaultValue": "admin_anu"
        },
        "tr_ingest_hospital_admissions_data_properties_pl_ingest_ecdc_data_parameters_sourceRelativeURL": {
            "type": "string",
            "defaultValue": "covid19/hospitalicuadmissionrates/csv/data.csv"
        },
        "tr_ingest_hospital_admissions_data_properties_pl_ingest_ecdc_data_parameters_sinkFileName": {
            "type": "string",
            "defaultValue": "hospital_admissions.csv"
        },
        "tr_ingest_population_data_properties_typeProperties_scope": {
            "type": "string",
            "defaultValue": "/subscriptions/b99b1a19-5347-4356-b2ec-eaf255b87829/resourceGroups/covid-reporting-rg/providers/Microsoft.Storage/storageAccounts/covidreportinganusa"
        },
        "trigger3_properties_typeProperties_scope": {
            "type": "string",
            "defaultValue": "/subscriptions/b99b1a19-5347-4356-b2ec-eaf255b87829/resourceGroups/covid-reporting-rg/providers/Microsoft.Storage/storageAccounts/covidreportinganusa"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/pl_execute_population_pipelines')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Execute Ingest Population Data",
                        "description": "This is execute pipeline. Description added by chandu.",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pl_ingest_population_data",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Execute Process Population Data",
                        "description": "This is to test cicd by chandu-chandu-thirdbranch-cicd-test",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Execute Ingest Population Data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "pl_process_population_data",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Execute"
                },
                "annotations": [],
                "lastPublishTime": "2024-10-15T17:25:34Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_ingest_population_data')]",
                "[concat(variables('factoryId'), '/pipelines/pl_process_population_data')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_ingest_ecdc_data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy ecdc data",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "HttpReadSettings",
                                    "requestMethod": "GET"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "DelimitedTextSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextWriteSettings",
                                    "quoteAllText": true,
                                    "fileExtension": ".txt"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ds_ecdc_raw_csv_http",
                                "type": "DatasetReference",
                                "parameters": {
                                    "relativeURL": {
                                        "value": "@pipeline().parameters.sourceRelativeURL",
                                        "type": "Expression"
                                    },
                                    "baseURL": {
                                        "value": "@pipeline().parameters.sinkFileName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ds_ecdc_raw_csv_dl",
                                "type": "DatasetReference",
                                "parameters": {
                                    "fileName": {
                                        "value": "@pipeline().parameters.sinkFileName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "sourceRelativeURL": {
                        "type": "string"
                    },
                    "sinkFileName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "Ingest"
                },
                "annotations": [],
                "lastPublishTime": "2024-10-15T17:25:34Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_ecdc_raw_csv_http')]",
                "[concat(variables('factoryId'), '/datasets/ds_ecdc_raw_csv_dl')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_ingest_ecdc_data_list')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Lookup ECDC File List",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "JsonReadSettings"
                                }
                            },
                            "dataset": {
                                "referenceName": "ds_ecdc_file_list",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Execute Copy for every record",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Lookup ECDC File List",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Lookup ECDC File List').output.value",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Copy ecdc data_copy1",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "HttpReadSettings",
                                                "requestMethod": "GET"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_ecdc_raw_csv_http",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "relativeURL": {
                                                    "value": "@item().sourceRelativeURL",
                                                    "type": "Expression"
                                                },
                                                "baseURL": {
                                                    "value": "@item().sourceBaseURL",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_ecdc_raw_csv_dl",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "fileName": {
                                                    "value": "@item().sinkFileName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Ingest"
                },
                "annotations": [],
                "lastPublishTime": "2024-10-15T17:25:34Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_ecdc_file_list')]",
                "[concat(variables('factoryId'), '/datasets/ds_ecdc_raw_csv_http')]",
                "[concat(variables('factoryId'), '/datasets/ds_ecdc_raw_csv_dl')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_ingest_population_data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "check if file exists",
                        "type": "Validation",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_population_raw_gz",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "timeout": "0.00:00:30",
                            "sleep": 10,
                            "minimumSize": 1024
                        }
                    },
                    {
                        "name": "Get File Mteadata",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "check if file exists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "ds_population_raw_gz",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "columnCount",
                                "size",
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "If Column count matches",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "Get File Mteadata",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(activity('Get File Mteadata').output.columnCount,13)",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Send Email",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "method": "POST",
                                        "headers": {},
                                        "url": "https://file_incompatible",
                                        "body": "dummy"
                                    }
                                }
                            ],
                            "ifTrueActivities": [
                                {
                                    "name": "copy_population_data",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:10:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageReadSettings",
                                                "recursive": true,
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ds_population_raw_gz",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "ds_population_raw_tsv",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ]
                                },
                                {
                                    "name": "Delete Source File",
                                    "type": "Delete",
                                    "dependsOn": [
                                        {
                                            "activity": "copy_population_data",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ds_population_raw_gz",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobStorageReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "concurrency": 1,
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Ingest"
                },
                "annotations": [],
                "lastPublishTime": "2024-10-15T17:25:33Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_population_raw_gz')]",
                "[concat(variables('factoryId'), '/datasets/ds_population_raw_tsv')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_process_cases_and_deaths')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "df_transform_cases_deaths",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "df_transform_cases_deaths",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "CasesAndDeathsSource": {},
                                    "Countrylookup": {},
                                    "CaseAndDeathSink": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Process"
                },
                "annotations": [],
                "lastPublishTime": "2024-10-15T17:25:33Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/df_transform_cases_deaths')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_process_population_data')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Execute Population Transformation",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/Users/delearningclasses@outlook.com/covid/setup/transform_population_data"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_db_covid_cluster",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Process"
                },
                "annotations": [],
                "lastPublishTime": "2024-10-15T17:25:33Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_db_covid_cluster')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pl_process_population_data1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Notebook1",
                        "type": "DatabricksNotebook",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "notebookPath": "/Users/delearningclasses@outlook.com/covid/setup/transform_population_data"
                        },
                        "linkedServiceName": {
                            "referenceName": "ls_db_covid_cluster_anu",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "folder": {
                    "name": "Process"
                },
                "annotations": [],
                "lastPublishTime": "2024-10-15T17:25:33Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_db_covid_cluster_anu')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_country_lookup')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_adls_covidreporting",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "lookup"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "country_lookup.csv",
                        "folderPath": "dim_country",
                        "fileSystem": "lookup"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "country",
                        "type": "String"
                    },
                    {
                        "name": "country_code_2_digit",
                        "type": "String"
                    },
                    {
                        "name": "country_code_3_digit",
                        "type": "String"
                    },
                    {
                        "name": "continent",
                        "type": "String"
                    },
                    {
                        "name": "population",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreporting')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_ecdc_file_list')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_blob_covidreportingsa",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "lookup"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "ecdc_file_list.json",
                        "container": "configs"
                    }
                },
                "schema": {
                    "type": "object",
                    "properties": {
                        "sourceRelativeURL": {
                            "type": "string"
                        },
                        "sinkFileName": {
                            "type": "string"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_blob_covidreportingsa')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_ecdc_raw_csv_dl')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_adls_covidreporting",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "fileName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "raw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": {
                            "value": "@dataset().fileName",
                            "type": "Expression"
                        },
                        "folderPath": "ecdc",
                        "fileSystem": "raw"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreporting')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_ecdc_raw_csv_http')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_http_opendata_europe",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "sourceBaseURL": {
                            "value": "@dataset().baseURL",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "relativeURL": {
                        "type": "string"
                    },
                    "baseURL": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "raw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "HttpServerLocation",
                        "relativeUrl": {
                            "value": "@dataset().relativeURL",
                            "type": "Expression"
                        }
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_http_opendata_europe')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_population_raw_gz')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_blob_covidreportingsa",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "raw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "population_by_age.tsv.gz",
                        "container": "population"
                    },
                    "columnDelimiter": "\t",
                    "compressionCodec": "gzip",
                    "compressionLevel": "Optimal",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "\u001f�\b\bHK�^\u0000\u0003tps00010.tsv\u0000�\\ێ�H�}�~E~�� ����ۖ�B�l��j��\u0002\u0006�c",
                        "type": "String"
                    },
                    {
                        "name": "�aw����U���8��jz�m�p$Q�ɸg0�������\u001f?���o�������_�\u000e]��!ᒰm\u0004[�N0",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_blob_covidreportingsa')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_population_raw_tsv')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_adls_covidreporting",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "raw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "population_by_age_tsv",
                        "folderPath": "population",
                        "fileSystem": "raw"
                    },
                    "columnDelimiter": "\t",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreporting')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_processed_cases_and_deaths')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_adls_covidreporting",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "processed"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "ecdc/cases_deaths",
                        "fileSystem": "processed"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreporting')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ds_raw_cases_and_deaths')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "ls_adls_covidreporting",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "raw"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "cases_deaths.csv",
                        "folderPath": "ecdc/cases_deaths",
                        "fileSystem": "raw"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "country",
                        "type": "String"
                    },
                    {
                        "name": "country_code",
                        "type": "String"
                    },
                    {
                        "name": "continent",
                        "type": "String"
                    },
                    {
                        "name": "population",
                        "type": "String"
                    },
                    {
                        "name": "indicator",
                        "type": "String"
                    },
                    {
                        "name": "daily_count",
                        "type": "String"
                    },
                    {
                        "name": "date",
                        "type": "String"
                    },
                    {
                        "name": "rate_14_day",
                        "type": "String"
                    },
                    {
                        "name": "source",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/ls_adls_covidreporting')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_adls_covidreporting')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('ls_adls_covidreporting_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('ls_adls_covidreporting_accountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_blob_covidreportingsa')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[parameters('ls_blob_covidreportingsa_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_db_covid_cluster')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureDatabricks",
                "typeProperties": {
                    "domain": "https://adb-467457677662018.18.azuredatabricks.net",
                    "accessToken": {
                        "type": "SecureString",
                        "value": "[parameters('ls_db_covid_cluster_accessToken')]"
                    },
                    "newClusterNodeType": "Standard_DS3_v2",
                    "newClusterNumOfWorker": "1",
                    "newClusterSparkEnvVars": {
                        "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
                    },
                    "newClusterVersion": "10.4.x-scala2.12",
                    "clusterOption": "Fixed",
                    "newClusterInitScripts": []
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_db_covid_cluster_anu')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureDatabricks",
                "typeProperties": {
                    "domain": "https://adb-467457677662018.18.azuredatabricks.net",
                    "accessToken": {
                        "type": "SecureString",
                        "value": "[parameters('ls_db_covid_cluster_anu_accessToken')]"
                    },
                    "newClusterNodeType": "Standard_DS3_v2",
                    "newClusterNumOfWorker": "1",
                    "newClusterSparkEnvVars": {
                        "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
                    },
                    "newClusterVersion": "10.4.x-scala2.12",
                    "clusterOption": "Fixed",
                    "newClusterInitScripts": []
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_http_opendata_europe')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "sourceBaseURL": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "HttpServer",
                "typeProperties": {
                    "url": "[parameters('ls_http_opendata_europe_properties_typeProperties_url')]",
                    "enableServerCertificateValidation": true,
                    "authenticationType": "Anonymous"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ls_sql_covid_db')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "server": "[parameters('ls_sql_covid_db_properties_typeProperties_server')]",
                    "database": "[parameters('ls_sql_covid_db_properties_typeProperties_database')]",
                    "encrypt": "optional",
                    "trustServerCertificate": false,
                    "authenticationType": "SQL",
                    "userName": "[parameters('ls_sql_covid_db_properties_typeProperties_userName')]",
                    "password": {
                        "type": "SecureString",
                        "value": "[parameters('ls_sql_covid_db_password')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/tr_ingest_ecdc_data')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "pl_ingest_ecdc_data_list",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2024-10-07T21:16:00",
                        "timeZone": "W. Europe Standard Time"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_ingest_ecdc_data_list')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/tr_ingest_hospital_admissions_data')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "pl_ingest_ecdc_data",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "sourceRelativeURL": "[parameters('tr_ingest_hospital_admissions_data_properties_pl_ingest_ecdc_data_parameters_sourceRelativeURL')]",
                            "sinkFileName": "[parameters('tr_ingest_hospital_admissions_data_properties_pl_ingest_ecdc_data_parameters_sinkFileName')]"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2024-10-08T20:15:00",
                        "timeZone": "W. Europe Standard Time"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_ingest_ecdc_data')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/tr_ingest_population_data')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "pl_execute_population_pipelines",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "BlobEventsTrigger",
                "typeProperties": {
                    "blobPathBeginsWith": "/population/blobs/population_by_age.tsv.gz",
                    "ignoreEmptyBlobs": true,
                    "scope": "[parameters('tr_ingest_population_data_properties_typeProperties_scope')]",
                    "events": [
                        "Microsoft.Storage.BlobCreated"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_execute_population_pipelines')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/trigger2')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Minute",
                        "interval": 5,
                        "startTime": "2024-10-06T19:56:00",
                        "timeZone": "W. Europe Standard Time"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/trigger3')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "pl_ingest_population_data",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "BlobEventsTrigger",
                "typeProperties": {
                    "blobPathBeginsWith": "/population/blobs/population_by_age.tsv.gz",
                    "ignoreEmptyBlobs": true,
                    "scope": "[parameters('trigger3_properties_typeProperties_scope')]",
                    "events": [
                        "Microsoft.Storage.BlobCreated"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/pl_ingest_population_data')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/df_transform_cases_deaths')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ds_raw_cases_and_deaths",
                                "type": "DatasetReference"
                            },
                            "name": "CasesAndDeathsSource"
                        },
                        {
                            "dataset": {
                                "referenceName": "ds_country_lookup",
                                "type": "DatasetReference"
                            },
                            "name": "Countrylookup"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ds_processed_cases_and_deaths",
                                "type": "DatasetReference"
                            },
                            "name": "CaseAndDeathSink"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "FilterEuropeOnly"
                        },
                        {
                            "name": "SelectOnlyRequiredFields"
                        },
                        {
                            "name": "PivotCOunts"
                        },
                        {
                            "name": "lookupcountry"
                        },
                        {
                            "name": "selectforsink"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          country as string,",
                        "          country_code as string,",
                        "          continent as string,",
                        "          population as integer,",
                        "          indicator as string,",
                        "          daily_count as integer,",
                        "          date as date,",
                        "          rate_14_day as double,",
                        "          source as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> CasesAndDeathsSource",
                        "source(output(",
                        "          country as string,",
                        "          country_code_2_digit as string,",
                        "          country_code_3_digit as string,",
                        "          continent as string,",
                        "          population as integer",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false) ~> Countrylookup",
                        "CasesAndDeathsSource filter(continent == 'Europe' && not(isNull(country_code))) ~> FilterEuropeOnly",
                        "FilterEuropeOnly select(mapColumn(",
                        "          country,",
                        "          country_code,",
                        "          population,",
                        "          indicator,",
                        "          daily_count,",
                        "          source,",
                        "          each(match(name=='date'),",
                        "               'reported'+'_date' = $$)",
                        "     ),",
                        "     skipDuplicateMapInputs: false,",
                        "     skipDuplicateMapOutputs: true) ~> SelectOnlyRequiredFields",
                        "SelectOnlyRequiredFields pivot(groupBy(country,",
                        "          country_code,",
                        "          population,",
                        "          source,",
                        "          reported_date),",
                        "     pivotBy(indicator, ['confirmed cases', 'deaths']),",
                        "     count = sum(daily_count),",
                        "     columnNaming: '$V_$N',",
                        "     lateral: true) ~> PivotCOunts",
                        "PivotCOunts, Countrylookup lookup(PivotCOunts@country == Countrylookup@country,",
                        "     multiple: false,",
                        "     pickup: 'any',",
                        "     broadcast: 'auto')~> lookupcountry",
                        "lookupcountry select(mapColumn(",
                        "          country = PivotCOunts@country,",
                        "          country_code_2_digit,",
                        "          country_code_3_digit,",
                        "          population = PivotCOunts@population,",
                        "          {confirmed cases_count},",
                        "          deaths_count,",
                        "          reported_date,",
                        "          source",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectforsink",
                        "selectforsink sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     truncate: true,",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> CaseAndDeathSink"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ds_raw_cases_and_deaths')]",
                "[concat(variables('factoryId'), '/datasets/ds_country_lookup')]",
                "[concat(variables('factoryId'), '/datasets/ds_processed_cases_and_deaths')]"
            ]
        }
    ]
}